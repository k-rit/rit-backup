#!/bin/bash
#   -----------------------------------------------------------------------------------------
#   Copyright (c) 2018 rit
#   -----------------------------------------------------------------------------------------
#   Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
#   -----------------------------------------------------------------------------------------

#Config
BASEDIR=$(readlink -f "$0")
BASEDIR=$(dirname "$BASEDIR")
BASENAME="$(basename $0)"

source ${BASEDIR}/backup-loadconfig
source ${BASEDIR}/backup-loadfunc

fstart $0

USER=${Sinusbot[USER]}
DIR_ROOT=${Sinusbot[DIR_ROOT]}
DIR_ROOT=`echo "$DIR_ROOT" | sed 's/"//g' | cut -c 2- | sed 's/ \// /g'`
DIR_BACKUP=${Sinusbot[DIR_BACKUP]}
DIR_BACKUP=`echo "$DIR_BACKUP" | sed 's/"//g' | cut -c 2- | sed 's/ \// /g'`
LOCAL_BACKUPS_NUM=${Sinusbot[LOCAL_BACKUPS_NUM]}
FULL_BACKUP_DAY=${Sinusbot[FULL_BACKUP_DAY]}

# set date
DATE=$(date +%Y-%m-%d--%H%M%S)
TODAY=`date +%u`

# timestamp
TIMESTAMP="/${DIR_ROOT}/${BASENAME}-timestamp.dat"

if [ ! -f ${TIMESTAMP} ]; then TODAY=${FULL_BACKUP_DAY}; fi
if [ `whoami` = root ]
then
	if [ "${TODAY}" == "${FULL_BACKUP_DAY}" ]
	then
		if [ -f ${TIMESTAMP} ]; then fstatus "Remove old Timestamp"; rm ${TIMESTAMP}; fi
		su - $USER -c "cd /$DIR_ROOT ; tar -czpf /$DIR_BACKUP/sinusbot-$DATE-ful.tar.gz -g ${TIMESTAMP} --exclude=$DIR_BACKUP -C / $DIR_ROOT"
	else
		su - $USER -c "cd /$DIR_ROOT ; tar -czpf /$DIR_BACKUP/sinusbot-$DATE-inc.tar.gz -g ${TIMESTAMP} --exclude=$DIR_BACKUP -C / $DIR_ROOT"
	fi
else
	if [ "${TODAY}" == "${FULL_BACKUP_DAY}" ]
	then
		if [ -f ${TIMESTAMP} ]; then fstatus "Remove old Timestamp"; rm ${TIMESTAMP}; fi
		cd $DIR_ROOT
		tar -czpf /$DIR_BACKUP/sinusbot-$DATE-ful.tar.gz -g ${TIMESTAMP} --exclude=$DIR_BACKUP -C / $DIR_ROOT
	else
		cd $DIR_ROOT
		tar -czpf /$DIR_BACKUP/sinusbot-$DATE-inc.tar.gz -g ${TIMESTAMP} --exclude=$DIR_BACKUP -C / $DIR_ROOT
	fi
fi
ftest $? "Backup-Sinusbot successfully completed :)" "Backup-Sinusbot exited with errors"

#fdone $0

fstatus "remove old backups"
${BASEDIR}/backup-remove "/$DIR_BACKUP" $LOCAL_BACKUPS_NUM

