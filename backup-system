#!/bin/bash
#   -----------------------------------------------------------------------------------------
#   Copyright (c) 2018 rit
#   -----------------------------------------------------------------------------------------
#   Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
#   -----------------------------------------------------------------------------------------

if [ "$1" == "f" ] || [ "$1" == "full" ] || [ "$1" == "Full" ]
then
	ART="Full"
else
	ART="System"
fi

#Config
BASEDIR=$(readlink -f "$0")
BASEDIR=$(dirname "$BASEDIR")
BASENAME="$(basename $0)"

source ${BASEDIR}/backup-loadconfig
source ${BASEDIR}/backup-loadfunc

fstart $0

# set Temp paths for mysql
MYSQL_DIR=/tmp/mysql_backup
MYSQL_SINGLE_DIR=${MYSQL_DIR}/sql

MYSQL_BEN=${System[MYSQL_BEN]}
MYSQL_PW=`echo ${System[MYSQL_PW]} | base64 --decode`
BACKUP_DIR=${System[BACKUP_DIR]}
SQL_DIR=${System[SQL_DIR]}
SQL_DIR=`echo "$SQL_DIR" | sed 's/"//g' | cut -c 2- | sed 's/ \// /g'`
SOURCE=${System[SOURCE]}
SOURCE=`echo "$SOURCE $MYSQL_DIR" | sed 's/"//g' | cut -c 2- | sed 's/ \// /g'`
FULL_BACKUP_DAY=${System[FULL_BACKUP_DAY]}
EXCLUDE_DIRS=${System[EXCLUDE_DIR]}
EXCLUDE_DIRS2=${System[EXCLUDE_DIR2]}

SINUSBOT_BACKUPDIR=${Sinusbot[DIR_BACKUP]}
LOCAL_BACKUPS_NUM=${System[LOCAL_BACKUPS_NUM]}

# set date
DATE=$(date +%Y-%m-%d--%H%M%S)
TODAY=`date +%u`

# set MYSQL path
MYSQL=/usr/bin/mysql
MYSQLDUMP=/usr/bin/mysqldump

#set excludes and basedir for Timestamp
if [ -d $EXCLUDE_DIRS ]; then EXCLUDE_DIR=`echo "--exclude=$EXCLUDE_DIRS" | sed 's/\///'`; else EXCLUDE_DIR=""; fi
if [ -d $EXCLUDE_DIRS2 ]; then EXCLUDE_DIR4=`echo "--exclude=$EXCLUDE_DIRS2" | sed 's/\///'`; else EXCLUDE_DIR4=""; fi
if [ -d $BACKUP_DIR ]; then EXCLUDE_DIR2=`echo "--exclude=$BACKUP_DIR" | sed 's/\///'`; else EXCLUDE_DIR2=""; fi
if [ -d $SINUSBOT_BACKUPDIR ]; then EXCLUDE_DIR3=`echo "--exclude=$SINUSBOT_BACKUPDIR" | sed 's/\///'`; else EXCLUDE_DIR3=""; fi
if [ $BASEDIR == "." ]; then BASEDIR2=""; else BASEDIR2="${BASEDIR}/"; fi

# timestamp
TIMESTAMP="${BASEDIR2}${BASENAME}-timestamp.dat"

# hostname
NAME=$(hostname)

if [ ! -d "$BACKUP_DIR" ]
then
	mkdir ${BACKUP_DIR}
fi

#################################################################################
#
# MYSQL
#

if [ -d "$SQL_DIR/backup" ]
then
	rm -R ${SQL_DIR}/backup
fi

if [ ! -d "${MYSQL_SINGLE_DIR}" ]
then
	mkdir -p ${MYSQL_SINGLE_DIR}
fi
el if [ -d "${MYSQL_DIR}" ] || [ -d "${MYSQL_SINGLE_DIR}" ]
then
	# remove the old MYSQL backup
	rm ${MYSQL_SINGLE_DIR}/* 1>/dev/null 2>/dev/null
	rm ${MYSQL_DIR}/*.* 1>/dev/null 2>/dev/null
	fstatus "The old MYSQL backup has been removed!"
fi

export MYSQL_PWD=${MYSQL_PW}

# single SQL
$MYSQLDUMP -E -u ${MYSQL_BEN} --all-databases | gzip > "${MYSQL_SINGLE_DIR}/backup-all-databases-$DATE.sql.gz"
ftest $? "The full MYSQL-Backup has been successfully created" "Error while creating full MYSQL-Backup"

databases=`$MYSQL --user=${MYSQL_BEN} -e "SHOW DATABASES;" | grep -Ev "(Database|information_schema|performance_schema)"` 
for db in $databases; do
	$MYSQLDUMP --force --opt --user=${MYSQL_BEN} --databases $db | gzip > "${MYSQL_SINGLE_DIR}/$db-$DATE.sql.gz"
done
ftest $? "The single MYSQL-Backup has been successfully created" "Error while creating single MYSQL-Backup"

# directory
tar -czpf ${MYSQL_DIR}/mysql-dir-$DATE.tar.gz -C / $SQL_DIR 1>/dev/null 2>/dev/null
fstatus "The MYSQL-Directory-Backup has been successfully created"

sleep 2

###################################################################################

fstatus "Backup-${ART} started..."
if [ ${ART} == "Full" ]
then
	tar -czpPf $BACKUP_DIR/bu-ful-${NAME}-$DATE.tar.gz --one-file-system $EXCLUDE_DIR $EXCLUDE_DIR2 $EXCLUDE_DIR3 $EXCLUDE_DIR4 /
else
	if [ "${TODAY}" == "${FULL_BACKUP_DAY}" ] || [ ! -f ${TIMESTAMP} ]
	then
		rm ${TIMESTAMP}
		tar -czpf $BACKUP_DIR/bu-sys-${NAME}-$DATE-ful.tar.gz -g ${TIMESTAMP} $EXCLUDE_DIR $EXCLUDE_DIR2 $EXCLUDE_DIR3 $EXCLUDE_DIR4 -C / $SOURCE
	else
		tar -czpf $BACKUP_DIR/bu-sys-${NAME}-$DATE-inc.tar.gz -g ${TIMESTAMP} $EXCLUDE_DIR $EXCLUDE_DIR2 $EXCLUDE_DIR3 $EXCLUDE_DIR4 -C / $SOURCE
	fi
fi

ftest $? "Backup-${ART} successfully completed :)" "Backup-${ART} exited with errors"

fstatus "remove old backups"
${BASEDIR}/backup-remove $BACKUP_DIR $LOCAL_BACKUPS_NUM
