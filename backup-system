#!/bin/bash
#   -----------------------------------------------------------------------------------------
#   Copyright (c) 2015 rilling.IT
#   -----------------------------------------------------------------------------------------
#   Released under the GNU General Public License 
#   -----------------------------------------------------------------------------------------

if [ "$1" == "f" ] || [ "$1" == "full" ] || [ "$1" == "Full" ]
then
	ART="Full"
else
	ART="System"
fi

DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
echo "[${DATE_H}] - Starte $0"
#Config
BASEDIR=$(dirname "$0")
echo "${BASEDIR}"
CONFIG="${BASEDIR}/backup.conf"

if [ ! -f "${CONFIG}" ]
then
	echo "Config-Datei nicht gefunden!"
	exit
fi

MYSQL_BEN=$(awk '/^\[System\]/{f=1} f==1&&/^MYSQL_BEN/{print $3;exit}' "${CONFIG}")
MYSQL_PW=$(awk '/^\[System\]/{f=1} f==1&&/^MYSQL_PW/{print $3;exit}' "${CONFIG}" | base64 --decode)
BACKUP_DIR=$(awk '/^\[System\]/{f=1} f==1&&/^BACKUP_DIR/{print $3;exit}' "${CONFIG}")
SQL_DIR=$(awk '/^\[System\]/{f=1} f==1&&/^SQL_DIR/{print $3;exit}' "${CONFIG}")
SOURCE=$(awk -F\" '/^\[System\]/{f=1} f==1&&/^SOURCE/{print $2;exit}' "${CONFIG}")
SOURCE="$SQL_DIR $SOURCE"
FULL_BACKUP_DAY=$(awk -F\" '/^\[System\]/{f=1} f==1&&/^FULL_BACKUP_DAY/{print $3;exit}' "${CONFIG}")

SINUSBOT_BACKUPDIR=$(awk '/^\[Sinusbot\]/{f=1} f==1&&/^DIR_BACKUP/{print $3;exit}' "${CONFIG}")
LOCAL_BACKUPS_NUM=$(awk '/^\[System\]/{f=1} f==1&&/^LOCAL_BACKUPS_NUM/{print $3;exit}' "${CONFIG}")

#Datum generieren
DATE=$(date +%Y-%m-%d-%H%M%S)
DATE_H=$(date +%d.%m.%Y-%H:%M:%S)

#Hostname
NAME=$(hostname)

if [ ! -d "$BACKUP_DIR" ]
then
	mkdir ${BACKUP_DIR}
fi

#Alte MYSQL Sicherung Löschen
rm $SQL_DIR/backup-all-databases-*.sql
echo "[${DATE_H}] - Das alte MYSQL Backup wurde entfernt!"

#SQL Sichern
mysqldump -E -u ${MYSQL_BEN} -p${MYSQL_PW} --all-databases > $SQL_DIR/backup-all-databases-$DATE.sql
# 
DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
echo "[${DATE_H}] - MYSQL Backup wurde erstellt"
sleep 2s

#${BASEDIR}/backup-prog apache2 stop
#${BASEDIR}/backup-prog mysql stop
#systemctl stop apache2
#systemctl stop mysql

if [ -d $BACKUP_DIR ]; then EXCLUDE_DIR="--exclude=$BACKUP_DIR"; else EXCLUDE_DIR=""; fi
if [ -d $SINUSBOT_BACKUPDIR ]; then EXCLUDE_DIR2="--exclude=$SINUSBOT_BACKUPDIR"; else EXCLUDE_DIR2=""; fi

DATE_H=$(date +%d.%m.%Y-%H:%M:%S)

# Temp start
TODAY=`date +%u`
BASENAME="$(basename $0)"
if [ $BASEDIR == "." ]; then BASEDIR2=""; else BASEDIR2="${BASEDIR}/"; fi
TIMESTAMP="${BASEDIR2}${BASENAME}-timestamp.dat"
# Temp end

echo "[${DATE_H}] - Backup-${ART} gestartet..." 
if [ ${ART} == "Full" ]
then
	tar -cjpPf $BACKUP_DIR/backup-full-${NAME}-$DATE.tar.bz2 --one-file-system $EXCLUDE_DIR $EXCLUDE_DIR2 /
else
	if [ ! -f ${TIMESTAMP} ]; then TODAY=${FULL_BACKUP_DAY}; fi
	if [ "${TODAY}" == "${FULL_BACKUP_DAY}" ]
	then
		rm ${TIMESTAMP}
		tar -cjpPf $BACKUP_DIR/backup-system-${NAME}-$DATE-ful.tar.bz2 -g ${TIMESTAMP} $EXCLUDE_DIR $EXCLUDE_DIR2 $SOURCE
	else
		tar -cjpPf $BACKUP_DIR/backup-system-${NAME}-$DATE-inc.tar.bz2 -g ${TIMESTAMP} $EXCLUDE_DIR $EXCLUDE_DIR2 $SOURCE
	fi
fi

DATE_H=$(date +%d.%m.%Y-%H:%M:%S)

#${BASEDIR}/backup-prog mysql start
#${BASEDIR}/backup-prog apache2 start
#systemctl start mysql
#systemctl start apache2

echo "[${DATE_H}] - Backup-${ART} erfolgreich abgeschlossen :)"

DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
echo "[${DATE_H}] - entferne alte Backups"

${BASEDIR}/backup-remove $BACKUP_DIR $LOCAL_BACKUPS_NUM

DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
echo "[${DATE_H}] - Done!"

