#!/bin/bash
#   -----------------------------------------------------------------------------------------
#   Copyright (c) 2018 rit
#   -----------------------------------------------------------------------------------------
#   Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
#   -----------------------------------------------------------------------------------------

#Config
BASEDIR=$(readlink -f "$0")
BASEDIR=$(dirname "$BASEDIR")
BASENAME="$(basename $0)"

source ${BASEDIR}/backup-loadconfig
source ${BASEDIR}/backup-loadfunc

fstart $0

DIRS="${Cloud[DIRS]}"
DIRS=`echo "$DIRS" | sed 's/"//g' | cut -c 2- | sed 's/ \// /g'`
BACKUP_DIR=${Cloud[BACKUP_DIR]}
LOCAL_BACKUPS_NUM=${Cloud[LOCAL_BACKUPS_NUM]}
FULL_BACKUP_DAY=${Cloud[FULL_BACKUP_DAY]}

NUM=$(echo ${DIRS} | awk '{print NF}')
NUM=$((NUM-1))
IFS=' ' read -r -a DIR_ROOT <<< "$DIRS"

# set date
TODAY=`date +%u`

if [ $BASEDIR == "." ]; then BASEDIR2=""; else BASEDIR2="${BASEDIR}/"; fi


for i in $(eval echo "{0..$NUM}")
do
	if [ ! -d ${DIR_ROOT[$i]} ];
	then fstatus "${DIR_ROOT[$i]} not found";exit 1;
	fi
	fstatus "Doing Backup of '${DIR_ROOT[$i]}'"
	NAME=$(basename ${DIR_ROOT[$i]})
	DATE=$(date +%Y-%m-%d--%H%M%S)
	TIMESTAMP="${BASEDIR2}${BASENAME}-$NAME-timestamp.dat"
	if [ ! -d $BACKUP_DIR/$NAME ]; then mkdir $BACKUP_DIR/$NAME; fi	
	if [ ! -f ${TIMESTAMP} ]; then TODAY=${FULL_BACKUP_DAY}; fi
	if [ $TODAY == ${FULL_BACKUP_DAY} ]
	then
		rm ${TIMESTAMP}
		tar -cjpf $BACKUP_DIR/${NAME}/${NAME}-${DATE}-ful.tar.bz2 -g ${TIMESTAMP} -C / ${DIR_ROOT[$i]}
	else
		tar -cjpf $BACKUP_DIR/${NAME}/${NAME}-${DATE}-inc.tar.bz2 -g ${TIMESTAMP} -C / ${DIR_ROOT[$i]}
	fi
	ftest $? "Backup-${NAME} successfully completed :)" "Backup-${NAME} exited with errors"

	${BASEDIR}/backup-remove $BACKUP_DIR/${NAME} $LOCAL_BACKUPS_NUM
done

