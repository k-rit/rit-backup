#!/bin/bash
#   -----------------------------------------------------------------------------------------
#   Copyright (c) 2018 rit
#   -----------------------------------------------------------------------------------------
#   Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
#   -----------------------------------------------------------------------------------------

# to echo a error to strerr
# use: eerr "the error"
function eerr() { printf "%s\n" "$*" >&2; }

# to test if a programm send an error
# use: ftest $? "Done" "Error!"
function ftest() {
	DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
	if [ $1 -eq 0 ]
	then
		if [ "$2" == "" ]
		then
			echo "[${DATE_H}] - DONE"
		else
			echo "[${DATE_H}] - $2"
		fi
	else
		if [ "$3" == "" ]
		then
			eerr "[${DATE_H}] - ERROR!"
		else
			eerr "[${DATE_H}] - $3"
		fi
	fi
}

# to echo a start with timestamp
# use: fstart
# or: fstart "Progamm"
function fstart() {
	DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
	if [ "$1" == "" ]
	then
		VARI=$0
	else
		VARI=$1
	fi

	echo "[${DATE_H}] - Starting $VARI"
}

# to echo a event/status with timestamp
# use: fstatus "event"
function fstatus() {
	DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
	if [ "$1" == "" ]
	then
		exit 1
	else
		echo "[${DATE_H}] - $1"
	fi
}

# to echo a error with timestamp
# use: ferror "the error"
# or: ferror
function ferror() {
	DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
	if [ "$1" == "" ]
	then
		eerr "[${DATE_H}] - ERROR!"
	else
		eerr "[${DATE_H}] - $1"
	fi
	exit 1
}

# to echo a exit with timestamp
# use: fdone
# or: fdone "Progamm"
function fdone() {
	DATE_H=$(date +%d.%m.%Y-%H:%M:%S)
	if [ "$1" == "" ]
	then
		VARI=$0
	else
		VARI=$1
	fi

	echo "[${DATE_H}] - Exit $VARI"
}


